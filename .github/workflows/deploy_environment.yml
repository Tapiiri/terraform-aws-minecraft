name: Deploy Page on Workflow Dispatch

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: 'Name of the environment to deploy'     
        required: true
      type:
        description: 'Type of the environment to deploy'     
        required: true
        default: "default"
        
env:
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  tf_actions_working_dir: .

jobs:
  terraform_apply:
    name: Deploy Page infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v2

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      env:
        TF_CLI_ARGS_init: -backend-config="key=neosim/${{ env.ENVIRONMENT }}/terraform.tfstate" 
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve -lock-timeout=5m
      env:
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_environment: ${{ env.ENVIRONMENT }}
        TF_VAR_key_name: minecraft-${{ env.ENVIRONMENT }}-ec2-ssh-key

    - name: Terraform output
      id: output
      run: terraform output -json > output-{{ env.ENVIRONMENT }}.json

    - name: Archive code coverage results
      id: artifact
      uses: actions/upload-artifact@v3
      with:
        name: output-{{ env.ENVIRONMENT }}
        path: output-{{ env.ENVIRONMENT }}.json